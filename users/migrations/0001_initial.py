# Generated by Django 4.2.6 on 2023-11-10 09:16

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import users.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(max_length=50)),
                ('middle_name', models.CharField(blank=True, max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone_number', models.CharField(max_length=15, unique=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
        ),
        migrations.CreateModel(
            name='Dictionary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('dictionary_code', models.CharField(blank=True, max_length=5)),
                ('dictionary_name_en', models.CharField(blank=True, max_length=50)),
                ('dictionary_name_sw', models.CharField(blank=True, max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'verbose_name': 'Dictionary',
                'verbose_name_plural': 'Dictionaries',
            },
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('zupin', models.CharField(blank=True, max_length=12, verbose_name='Property ID')),
                ('property_type', models.CharField(choices=[('house', 'House'), ('plot', 'Plot'), ('foundation', 'Foundation'), ('school', 'School'), ('farm', 'Farm')], max_length=50, verbose_name='Property Type')),
                ('ownership_type', models.CharField(choices=[('cro', 'CRO'), ('pcro', 'PCRO'), ('offer_letter', 'Offer Letter'), ('affidativ', 'Affidativ'), ('shehia_letter', 'Shehia Letter')], max_length=50, verbose_name='Property Ownership')),
                ('area', models.DecimalField(decimal_places=3, max_digits=9)),
                ('locality', models.CharField(max_length=30)),
                ('district', models.CharField(max_length=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Property',
                'verbose_name_plural': 'Properties',
                'ordering': ('created_at',),
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('form_number', models.CharField(max_length=20, unique=True)),
                ('registration_number', models.CharField(max_length=30, unique=True)),
                ('type', models.CharField(choices=[('sale', 'Sale'), ('gift', 'Gift'), ('inheritance', 'Inheritance'), ('lease', 'Lease')], max_length=50)),
                ('received_from', models.CharField(max_length=50)),
                ('purchase_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_approved', models.BooleanField(default=False)),
                ('is_valuation_done', models.BooleanField(default=False)),
                ('is_urp_done', models.BooleanField(default=False)),
                ('is_acre_done', models.BooleanField(default=False)),
                ('is_committee_done', models.BooleanField(default=False)),
                ('is_land_records_done', models.BooleanField(default=False)),
                ('is_document_done', models.BooleanField(default=False)),
                ('is_signed', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('property', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='users.property')),
            ],
            options={
                'verbose_name': 'Transaction',
                'verbose_name_plural': 'Transactions',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Party',
            fields=[
                ('customuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('address', models.TextField()),
                ('city', models.CharField(blank=True, max_length=100)),
                ('post_code', models.CharField(blank=True, max_length=20)),
                ('identification', models.CharField(max_length=12)),
                ('natural_person', models.BooleanField(default=True)),
                ('citizenship', models.CharField(max_length=30)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=10)),
                ('dob', models.DateField(max_length=8)),
            ],
            options={
                'verbose_name': 'Party',
                'verbose_name_plural': 'Parties',
            },
            bases=('users.customuser',),
        ),
        migrations.CreateModel(
            name='StaffUser',
            fields=[
                ('customuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('employee_id', models.CharField(max_length=30)),
                ('department', models.CharField(choices=[('registry', 'Registry'), ('executive_secretary', 'Executive Secretary'), ('coordination_unit', 'Coordination Unit'), ('urban_planning', 'Urban Planning'), ('valuation', 'Valuation'), ('3_acre_section', '3 Acre Section'), ('committee', 'Committee'), ('lease_section', 'Lease Section'), ('land_title', 'Land Title')], max_length=20)),
            ],
            bases=('users.customuser',),
        ),
        migrations.CreateModel(
            name='TransactionAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.transaction')),
                ('assigned_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_by_user_transactions', to='users.staffuser')),
                ('assigned_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assigned_user_transactions', to='users.staffuser')),
            ],
            options={
                'verbose_name': 'Transaction Assignment',
                'verbose_name_plural': 'Transaction Assignments',
            },
        ),
        migrations.CreateModel(
            name='Inspection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True)),
                ('file_path', models.FileField(blank=True, null=True, upload_to=users.models.upload_to)),
                ('inspected_date', models.DateField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('closed', models.BooleanField(default=False)),
                ('transaction_assigned', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions_assignment_inspections', to='users.transactionassignment')),
            ],
            options={
                'verbose_name': 'Inspection',
                'verbose_name_plural': 'Inspections',
            },
        ),
        migrations.CreateModel(
            name='DictionaryItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('dictionary_item_code', models.CharField(blank=True, max_length=5, null=True)),
                ('dictionary_item_name_en', models.CharField(blank=True, max_length=50, null=True)),
                ('dictionary_item_name_sw', models.CharField(blank=True, max_length=50, null=True)),
                ('dictionary_item_parent', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('dictionary', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='users.dictionary')),
            ],
            options={
                'verbose_name': 'Dictionary Item',
                'verbose_name_plural': 'Dictionary Items',
            },
        ),
        migrations.AddField(
            model_name='transaction',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_transactions', to='users.staffuser'),
        ),
        migrations.AddField(
            model_name='transaction',
            name='transferee',
            field=models.ManyToManyField(related_name='transferee_applications', to='users.party'),
        ),
        migrations.AddField(
            model_name='transaction',
            name='transferor',
            field=models.ManyToManyField(related_name='transferor_applications', to='users.party'),
        ),
    ]
